import React, { Component } from 'react';
import { connect } from 'react-redux';
import global from "../../constants/styles/settings.scss";
import styles from './index.scss';
import cn from 'classnames';
import { toggleSlider } from '../../list';

import Checkbox from '../Checkbox';
import logo from '../../assets/images/slider-button.png';
import icon1 from '../../assets/images/checkbox_icon1.svg';

class Header extends Component {
  constructor(props) {
    super(props);

    this.initState();
  }

  initState() {
    let cats = this.props.list.categoriesMap;
    const categories = this.props.list.categories;

    let visibleCategories = categories.slice(0, this.props.list.categoriesToShow);

    for(let category of categories) {
      let index = visibleCategories.indexOf(category);
      category.$.id = Number(category.$.id);
      category.visible = false;

      if (index !== -1) {
        category.visible = true;
        visibleCategories.splice(index, 1);
      }
      cats.set(category.$.id, []);
    }

    const goods = this.props.list.goods;

    for(let item of goods) {
      cats.get(Number(item.categoryId)).push(item);
    }

    return cats;
  }

  prepareCheckboxes() {
    const categories = this.props.list.categories;

    let result = [];
    for(let category of categories) {
      result.push(
        <Checkbox
          className={styles.checkbox}
          key={category.$.id}
          checked={category.visible}
          title={category._}
          category_id={category.$.id}
          img={icon1}
          onClick={toggleSlider.bind(this, category.$.id)} />
      );
    }

    return result;
  }

  renderCheckboxes() {
    const categories = this.props.list.categoriesMap;
    const { toggleSlider } = this.props;

    return (
      <div className={styles.bottom}>
        {this.prepareCheckboxes()}
      </div>
    )
  }

  render() {

    return (
      <div className={styles.header}>
        <div className={cn(global.container, styles.container)}>
          <div className={styles.top}>
            <div className={styles.left_inner}>
              <div className={styles.logo}>
                <div className={styles.row}>
                  <span className={styles.name}>–ë–ò–†–ñ–ê<br />–ö–£–•–û–ù–¨</span>
                  <span className={styles.city}>–ì–æ—Ä–æ–¥: –ú–æ—Å–∫–≤–∞</span>
                </div>
                <div className={styles.row}>
                  <img src={logo} alt="" />
                </div>
              </div>
            </div>

            <div className={styles.right_inner}>

              <div className={styles.buttons}>
                <a href="#" className={styles.button}>–ú–Ω–µ –Ω—É–∂–Ω–∞ –∫—É—Ö–Ω—è</a>
                <a href="#" className={styles.button}>8(800)333-17-90</a>
              </div>

            </div>

          </div>
          <div className={styles.middle}>
            <div className={styles.title}>–£–º–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ –∫—É—Ö–æ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏</div>
            <div className={styles.subtitle}>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç–µ—Ö–Ω–∏–∫–∞ –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫—É—Ö–Ω–∏, –ø–æ—Ç–æ–º –º—ã –µ—ë –ø—Ä–∏–≤–µ–∑—ë–º, –ø–æ–¥–∫–ª—é—á–∏–º –∏ –¥–∞–∂–µ –Ω–∞—É—á–∏–º –µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è üéÇ</div>
          </div>

          {this.renderCheckboxes()}

          <div className={styles.color_select}>
            <div className={styles.heading}>
              –ö–∞–∫–æ–≥–æ —Ü–≤–µ—Ç–∞ —Ç–µ—Ö–Ω–∏–∫–∞ –≤–∞–º –ø–æ–¥–æ–π–¥–µ—Ç?
            </div>
          </div>
        </div>

      </div>
    )
  }
};

function mapStateToProps(state) {
  const { list } = state;

  return {
    list
  };
}

export default connect(mapStateToProps, { toggleSlider })(Header);
